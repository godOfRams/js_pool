{"version":3,"sources":["src/tasksWithFunctions.js"],"names":["sayHelloWorld","sayHello","name","sumNumbers","a","b","valueByKeyInObject","key","obj","extendObject","value","Object","keys","length","console","log","increaseBiggerArg","increaser","calculateFigureArea","figureType","igureType","Math","pow"],"mappings":";;;;;;;;;;;;;AAAA;AACO,SAASA,aAAa,GAAG;EAC9B,OAAO,eAAe;AACxB;;AAEA;AACO,SAASC,QAAQ,CAACC,IAAI,EAAE;EAC7B,wBAAiBA,IAAI;AACvB;;AAEA;AACA;AACO,SAASC,UAAU,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC/B,OAAOD,CAAC,GAAGC,CAAC;AACd;;AAEA;AACA;AACA;AACO,SAASC,kBAAkB,CAACC,GAAG,EAAY;EAAA,IAAVC,GAAG,uEAAG,CAAC,CAAC;EAC9C,OAAOA,GAAG,CAACD,GAAG,CAAC;AACjB;;AAEA;AACA;AACA;AACO,SAASE,YAAY,CAACF,GAAG,EAAEG,KAAK,EAAY;EAAA,IAAVF,GAAG,uEAAG,CAAC,CAAC;EAC/C,IAAIG,MAAM,CAACC,IAAI,CAACJ,GAAG,CAAC,CAACK,MAAM,EAAE;IAC3BL,GAAG,CAACD,GAAG,CAAC,GAAGG,KAAK;EAClB,CAAC,MAAM;IACL,2BAAUH,GAAG,EAAGG,KAAK;EACvB;AACF;AACAI,OAAO,CAACC,GAAG,CAACN,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;;AAE1C;AACA;AACA;AACO,SAASO,iBAAiB,CAACZ,CAAC,EAAEC,CAAC,EAAE;EACtC,IAAMY,SAAS,GAAG,GAAG;EACrB,OAAOb,CAAC,GAAGC,CAAC,GAAGD,CAAC,GAAGa,SAAS,GAAGZ,CAAC,GAAGY,SAAS;AAC9C;;AAEA;AACA;AACA;AACA;AACO,SAASC,mBAAmB,CAACC,UAAU,EAAEf,CAAC,EAAEC,CAAC,EAAE;EACpD,IAAIc,UAAU,KAAK,QAAQ,EAAE;IAC3B,OAAOf,CAAC,GAAGA,CAAC;EACd,CAAC,MAAM,IAAIgB,SAAS,KAAK,QAAQ,EAAE;IACjC,OAAOC,IAAI,CAACC,GAAG,IAAIlB,CAAC,GAAGA,CAAC,CAAC;EAC3B,CAAC,MAAM,IAAIgB,SAAS,KAAK,WAAW,EAAE;IACpC,OAAOhB,CAAC,GAAGC,CAAC;EACd;AACF","file":"tasksWithFunctions.39180f71.js","sourceRoot":"..","sourcesContent":["// Task 1 - should return the string \"Hello, World!\"\nexport function sayHelloWorld() {\n  return \"Hello, World!\";\n}\n\n// Task 2 - should return the string \"Hello, Somename!\"\nexport function sayHello(name) {\n  return `Hello, ${name}!`;\n}\n\n// Task 3 - should return sum of two numbers\n// a + b\nexport function sumNumbers(a, b) {\n  return a + b;\n}\n\n// Task 4 - should return a value by key in provided object\n// provided object - { name: 'Name' }\n// result - 'Name'\nexport function valueByKeyInObject(key, obj = {}) {\n  return obj[key];\n}\n\n// Task 5 - should return an object with new field and value\n// without object - { name: 'Name' }\n// with an object - { name: 'Name', age: 100 }\nexport function extendObject(key, value, obj = {}) {\n  if (Object.keys(obj).length) {\n    obj[key] = value;\n  } else {\n    return { [key]: value };\n  }\n}\nconsole.log(extendObject(\"name\", \"Alice\"));\n\n// Task 6 - should return a larger argument increased by 100\n// with (10, 7) output - 110\n// with (10, 77) output - 177\nexport function increaseBiggerArg(a, b) {\n  const increaser = 100;\n  return a > b ? a + increaser : b + increaser;\n}\n\n// Task 7 - calculate the area of a figure using\n// provided type: \"square\", \"circle\", or \"rectangle\"\n// for circle \"a\" is radius\n// for square only \"a\" needed\nexport function calculateFigureArea(figureType, a, b) {\n  if (figureType === \"square\") {\n    return a * a;\n  } else if (igureType === \"circle\") {\n    return Math.pow * (a * a);\n  } else if (igureType === \"rectangle\") {\n    return a * b;\n  }\n}\n"]}